services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - infra_network

  minio:
    image: quay.io/minio/minio
    container_name: minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_ACCESS_KEY}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - infra_network

  minio-setup:
    image: quay.io/minio/mc
    container_name: minio_setup
    depends_on:
      - minio
    volumes:
      - ./minio/create-bucket.sh:/create-bucket.sh
    entrypoint: /bin/sh
    command: -c "chmod +x /create-bucket.sh && /create-bucket.sh"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_ACCESS_KEY}
    networks:
      - infra_network

  mlflow:
    image: mlflow_server
    container_name: mlflow_server
    build:
      context: ./mlflow
    restart: always
    ports:
      - "5003:5000"
    environment:
      AWS_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${MINIO_SECRET_ACCESS_KEY}
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      MLFLOW_S3_IGNORE_TLS: "true"
    command: >
      mlflow server
      --backend-store-uri postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      --host 0.0.0.0
      --serve-artifacts
      --artifacts-destination s3://mlflow
    depends_on:
      - postgres
      - minio-setup
    networks:
      - infra_network

  jenkins:
    build:
      context: ./jenkins
    container_name: jenkins
    restart: always
    ports:
      - "8081:8080"
      - "50000:50000"
    environment:
      JENKINS_ADMIN_ID: admin
      JENKINS_ADMIN_PASSWORD: admin
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - infra_network

volumes:
  postgres_data:
  minio_data:
  jenkins_home:

networks:
  default:
    driver: bridge
  infra_network:
    external: true
